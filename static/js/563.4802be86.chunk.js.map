{"version":3,"file":"static/js/563.4802be86.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","redux/selectors.js","components/ContactsList/ContactsList.styled.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.js","components/pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nmargin-top: 10px;\ncolor: #160b0f;\n font-size: 16px;\n font-weight: 500;\n`;\nexport const Input = styled.input`\nwidth: 250px;\npadding: 5px;\nbackground: transparent;\nborder-radius: 3px;\nborder: 2px solid palevioletred;\ncolor: #160b0f;\n`;\nexport const Button = styled.button`\nbackground: transparent;\nborder-radius: 3px;\nborder: 2px solid palevioletred;\ncolor: palevioletred;\nmargin: 0.5em 1em;\npadding: 0.25em 1em;\ncursor: pointer;\n`;\n\nexport const FormContainer = styled.form`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n`","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContactsThunk } from 'redux/contacts.thunk';\nimport { Label, Input, Button, FormContainer } from './Form.styled';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContactsThunk({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit} autoComplete=\"off\">\n      <div>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Enter number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n      </div>\n      <Button>Add new contact</Button>\n    </FormContainer>\n  );\n};\nexport default Form;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n  }\n);\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0.5em 1em;\n  padding: 0.25em 1em;\n  cursor: pointer;\n`;\nexport const ContactName = styled.p`\n  color: #160b0f;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const ContactNumber = styled.span`\n  margin-left: 10px;\n`;\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import css from './Loader.module.css'\nimport { ThreeDots } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"palevioletred\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n// import ContactsListItem from 'components/ContactsListItem';\nimport {\n  selectVisibleContacts,\n  selectLoading,\n  selectError,\n} from 'redux/selectors';\nimport { getContactsThunk } from 'redux/contacts.thunk';\nimport { deleteContactByIdThunk } from 'redux/contacts.thunk';\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n} from './ContactsList.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {!isLoading && !error &&\n        (visibleContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactName>\n              {name[0].toUpperCase() + name.substring(1)} :\n              <ContactNumber>{number}</ContactNumber>\n            </ContactName>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContactByIdThunk(id))}\n            >\n              Delete\n            </Button>\n          </ContactItem>)\n        ))}\n        {isLoading && <Loader/>}\n        {error && <p>Something went wrong ...</p>}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  color: #160b0f;\n   font-size: 16px;\n   font-weight: 500;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  padding: 5px;\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: #160b0f;\n`;","import { useDispatch,useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n \n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(filterContacts(e.target.value))}\n        placeholder=\"Enter name\"\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: #160b0f;\n  font-size: 30px;\n`;\nexport const Section = styled.section`\n  width: 500px;\n  margin: 30px;\n`;","import Form from 'components/Form';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport { Section,Title } from 'components/App.styled';\n\nconst ContactsPage = () =>{\n    return(\n        <>\n        <Section>\n          <Form />\n        </Section>\n        <Section>\n          <Title>Contacts</Title>\n          <Filter />\n          <ContactsList />\n        </Section>\n      </>\n    )\n}\n\nexport default ContactsPage;"],"names":["Label","styled","Input","Button","FormContainer","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","addContactsThunk","autoComplete","type","onChange","placeholder","pattern","title","required","selectLoading","state","contacts","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","ContactName","ContactNumber","ContactItem","className","css","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","visibleContacts","useSelector","useEffect","getContactsThunk","map","id","toUpperCase","substring","onClick","deleteContactByIdThunk","filterContacts","Title","Section"],"sourceRoot":""}